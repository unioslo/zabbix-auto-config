[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "zabbix-auto-config"
dynamic = ["version"]
description = "Zabbix auto config - ZAC"
readme = "README.md"
requires-python = ">=3.9"
license.file = "LICENSE"
keywords = []
authors = [{ name = "Paal Braathen", email = "paal.braathen@usit.uio.no" }]
maintainers = [{ name = "Peder Hovdan Andresen", email = "pederhan@uio.no" }]
classifiers = [
    "Intended Audience :: System Administrators",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "multiprocessing-logging>=0.3.1",
    "psycopg2>=2.9.5",
    "pydantic>=2.11",
    "httpx>=0.27.0",
    "tomli>=2.0.0",
    "packaging>=23.2",
    "typing_extensions>=4.12.0",
    "platformdirs>=4.3.7",
    "typer>=0.15.2",
]


[dependency-groups]
dev = [{ include-group = "test" }]
test = [
    "pytest>=7.4.3",
    "pytest-timeout>=2.2.0",
    "hypothesis>=6.62.1",
    "inline-snapshot>=0.14.0",
]

[project.urls]
Source = "https://github.com/unioslo/zabbix-auto-config"

[project.scripts]
zac = "zabbix_auto_config.__main__:main"

[tool.hatch.version]
path = "zabbix_auto_config/__about__.py"

[tool.hatch.envs.default]
installer = "uv"

[tool.hatch.envs.default.scripts]
test = "pytest {args}"

[tool.hatch.build.targets.sdist]
exclude = ["/.github", "/tests", "/path"]

[tool.hatch.build.targets.wheel]
packages = ["zabbix_auto_config"]

[tool.inline-snapshot]
format-command = "ruff format --stdin-filename {filename}"

[tool.pyright]
pythonVersion = "3.9"

[tool.ruff]
# Same as Black.
line-length = 88
src = ["zabbix_auto_config"]
extend-include = [
    "pyproject.toml",
    "zabbix_auto_config/**/*.py",
    "tests/**/*.py",
]

[tool.ruff.lint]
extend-select = [
    "E",       # pydecodestyle (errors)
    "W",       # pydecodestyle (warnings)
    "G",       # flake8-logging-format
    "I",       # isort
    "LOG",     # flake8-logging
    "PLE1205", # pylint (too many logging args)
    "PLE1206", # pylint (too few logging args)
    "TID252",  # flake8-tidy-imports (prefer absolute imports)
    "C4",      # flake8-comprehensions
    "B",       # flake8-bugbear
]
# 2. Avoid enforcing line-length violations (`E501`)
ignore = ["E501"]

# 3. Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

[tool.ruff.format]
# Enable auto-formatting for docstrings.
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
# Force one line per import to simplify diffing and merging
force-single-line = true
# Add annotations import to every file
required-imports = ["from __future__ import annotations"]
