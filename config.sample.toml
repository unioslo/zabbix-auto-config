[zac]
# Directory containing the source collector modules.
source_collector_dir = "path/to/source_collector_dir/"

# Directory containing the host modifier modules.
host_modifier_dir = "path/to/host_modifier_dir/"

# Log level for the application.
log_level = "INFO"

# Health status for each ZAC process.
health_file = "/tmp/zac_health.json"

# File containing hostnames of hosts to add/remove when failsafe is reached.
failsafe_file = "/tmp/zac_failsafe.json"

# File that admin can create to signal manual approval of adding/removing hosts
# when failsafe is reached.
# The file is automatically deleted after changes are made.
failsafe_ok_file = "/tmp/zac_failsafe_ok"

# Require that the application can delete the failsafe OK file before making changes.
# If false, the application will make changes even if it fails to delete the file.
# It is then up to the administrator to manually delete the file afterwards.
failsafe_ok_file_strict = true


# Postgres DB settings
[zac.db]
# User credentials (postgres user)
user = "zabbix"
password = "secret"

# Database name (created if not exists)
dbname = "zac"

# Connection info
host = "localhost"
port = 5432

# Connection timeout in seconds
connect_timeout = 2


[zac.db.tables]
# Merged host data table
hosts = "hosts"

# Source host data table
hosts_source = "hosts_source"


# Configuration for ZAC processes.
[zac.process.source_merger]
# How often to run the source merger in seconds
update_interval = 60

[zac.process.host_updater]
update_interval = 60

[zac.process.hostgroup_updater]
update_interval = 60

[zac.process.template_updater]
update_interval = 60

[zac.process.garbage_collector]
# Enable garbage collection, including:
#   - Remove disabled hosts from maintenances
#   - Delete maintenances if all hosts are disabled (optional)
enabled = false
delete_empty_maintenance = false # Delete maintenances if all its hosts are disabled
update_interval = 86400 # every 24 hours


[zabbix]
# Directory containing mapping files.
map_dir = "path/to/map_dir/"

url = "http://localhost:8080"
username = "Admin"
password = "zabbix"

# Preview changes without making them.
# Disables all write operations to Zabbix.
dryrun = true

# Maximum number of hosts to add/remove in one go.
failsafe = 20

# Zabbix API timeout in seconds (0 = no timeout)
timeout = 60

# Verify SSL certificates when connecting to Zabbix.
# Can be True/False or the path to a CA bundle file.
verify_ssl = true

# Prefix for managed tags
tags_prefix = "zac_"
managed_inventory = ["location"]

# Names of hostgroups that zabbix-auto-config will manage.
hostgroup_all = "All-hosts"
hostgroup_manual = "All-manual-hosts"
hostgroup_disabled = "All-auto-disabled-hosts"
hostgroup_source_prefix = "Source-"
hostgroup_importance_prefix = "Importance-"

# Template group creation
# If we have a host group named `Siteadmin-my-hosts`, ZAC creates a
# template group named `Templates-my-hosts`
# NOTE: will create host groups if enabled on Zabbix <6.2
create_templategroups = true
templategroup_prefix = "Templates-"

# Separator used for group name prefixes
prefix_separator = "-"

# Extra host groups to create for each site admin
# i.e. if we have a group in the mapping file called `Hostgroup-bob-hosts`
# we can create `Secondary-bob-hosts` in Zabbix if we specify `Secondary`
extra_siteadmin_hostgroup_prefixes = []

[source_collectors.mysource]
# Name of the source collector module without the .py extension
module_name = "mysource"

# How often to run the source collector in seconds
update_interval = 60

# Any other options are passed as keyword arguments to the source collector's
# `collect()` function
kwarg_passed_to_source = "value" # extra fields are passed to the source module as kwargs
another_kwarg = "value2"         # We can pass an arbitrary number of kwargs to the source module


# We can define multiple sources using the same module as long
# as their config entries have different names
[source_collectors.othersource] # different name
module_name = "mysource" # same module as above
update_interval = 60

# By default, the application applies an exponential backoff to sources
# that fail to collect data due to network issues or other problems.
# The backoff factor is multiplied by the update interval to determine
# how long to wait before retrying the source.
# The default backoff factor is 1.5. Backoff is disabled if the factor is 1.
backoff_factor = 2 # Increase the backoff factor for this source

# We can limit how long the backoff time can grow to prevent a source
# from waiting too long between retries.
max_backoff = 3600 # Maximum backoff time in seconds


[source_collectors.error_tolerance_source]
module_name = "mysource" # re-using same module
update_interval = 60

# Error tolerance settings
#
# We can define a custom error tolerance for each source collector.
# By setting an error tolerance, exponential backoff is disabled for the source
# and the source will keep retrying at the same interval until it succeeds
# or hits the error tolerance.

# By setting `error_tolerance` and `error_duration` we can control how many
# errors within a certain timespan are tolerated before the source is disabled
# for a certain duration.

# How many errors to tolerate before disabling the source
error_tolerance = 5 # Tolerate 5 errors within `error_duration` seconds

# How long an error should be kept in the error tally before discarding it
# In this case, we consider 5 errors or more within 10 minutes as a failure
error_duration = 600 # should be greater than update_interval

# Duration to disable source if error threshold is reached
# If this is set to 0, error tolerance is disabled, and the source will
# go back to using exponential backoff as its retry strategy.
disable_duration = 3600 # time in seconds (1 hour)

# Exit the application if the source fails
# If true, the application will exit if the source fails
# If false, the source will be disabled for `disable_duration` seconds
exit_on_error = false # Disable source if it fails

[source_collectors.no_error_handling_source]
module_name = "mysource" # re-using same module
update_interval = 60

# If disable_duration is set to a negative value, the source uses neither
# exponential backoff nor error tolerance. It will keep retrying at the
# same pace no matter how many errors it encounters.
disable_duration = -1
